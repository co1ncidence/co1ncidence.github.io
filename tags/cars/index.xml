
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
 <channel>
   <title>Cars on nuaNce&#39;s blog</title>
   <link>https://co1ncidence.github.io/tags/cars/</link>
   <description>Recent content in Cars on nuaNce&#39;s blog</description>
   <generator>Hugo -- gohugo.io</generator>
   <language>en-us</language>
   <lastBuildDate>Wed, 05 Aug 2020 15:58:49 -0500</lastBuildDate>
   
       <atom:link href="https://co1ncidence.github.io/tags/cars/index.xml" rel="self" type="application/rss+xml" />
   
   
     <item>
       <title>Why I Stopped Using Windows</title>
       <link>https://co1ncidence.github.io/posts/why-i-stopped-using-windows/</link>
       <pubDate>Sat, 29 Aug 2020 12:21:14 -0500</pubDate>
       
       <guid>https://co1ncidence.github.io/posts/why-i-stopped-using-windows/</guid>
       <description>&lt;p&gt;Before we begin, a confession, I used to really like Windows, I admit that it was an &amp;ldquo;ignorant bliss&amp;rdquo; kind of thing, but back then I didn&amp;rsquo;t really know much better. I used it often and started liking it even more when I began using some of it&amp;rsquo;s more hidden, &amp;ldquo;power user oriented&amp;rdquo; features, such as the built in window management and multitasking capabilities. And while I did have quite a good time in my years using Windows, reality dawned on me in early 2020. I began noticing many things that were just unacceptable about an operating system that makes up the vast majority of the market share that it is part of, while also costing a considerable amount of money. Some of the reasons were mere annoyances, others were ethical concerns. Not only that, I had started learning more and more about an alternative to Windows, more on that later though. In this article I plan on talking in more detail about this, why I decided to stop using Microsoft&amp;rsquo;s operating system and moved on to something far, far better.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To those of you more advanced readers, let me clarify beforehand that I am discussing this topic from a more casual viewpoint, so you won&amp;rsquo;t hear me talking about the flaws in the NT kernel or some of the other things regarding foundation that Windows is built upon, this is meant to be an experience that is relatable to the average user.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;whats-wrong-with-windows&#34;&gt;What&amp;rsquo;s wrong with Windows?&lt;/h2&gt;
&lt;p&gt;I will divide this subsection into 5 categories and talk about them separately:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Slow, bloated interface, terrible UI design&lt;/li&gt;
&lt;li&gt;Many security and privacy issues, constant spying from Microsoft&lt;/li&gt;
&lt;li&gt;Software base being almost completely proprietary&lt;/li&gt;
&lt;li&gt;Lack of control over system, too much going on without user consent&lt;/li&gt;
&lt;li&gt;Other, more miscellaneous concerns&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;slow-bloated-interface-terrible-ui-design&#34;&gt;Slow, bloated Interface, terrible UI design&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Since design is a subjective topic, this section will be regarded as the &amp;ldquo;least important&amp;rdquo;, some will agree with what I say but some might not, keep this in mind as you read.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;One of the things that I noticed while using Windows on a daily basis was just how terrible the design could be sometimes. It felt like there was no real effort put into the interface of Windows. I was constantly changing the look &amp;amp; feel of my system using 3rd party programs like theme patchers to make the experience even tolerable. Buttons are misaligned all over, there little consistency to the implementation of animations and other visual effects throughout the desktop, and worst of all, some of the less used interfaces still have design elements from older versions of Windows. One of the prime examples of this is Microsoft&amp;rsquo;s Outlook email client, which still uses &lt;a href=&#34;https://i.postimg.cc/Rh4gmHG8/Outlook-DV-Settings.jpg&#34;&gt;Windows XP dialogs&lt;/a&gt; for some of the account settings menus. And if you&amp;rsquo;ve ever dived into the more advanced windows settings like the control panel and device management programs, you&amp;rsquo;ve also most likely seen the Windows 7-esque design used there. What&amp;rsquo;s worse, there isn&amp;rsquo;t much you can do to change these things, since the only real customization options that Microsoft provides are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Changing the desktop wallpaper&lt;/li&gt;
&lt;li&gt;Arranging desktop icons&lt;/li&gt;
&lt;li&gt;Adding items (only launchers so far) to the Taskbar&lt;/li&gt;
&lt;li&gt;Changing the single accent color, which only a few Windows Apps actually use&lt;/li&gt;
&lt;li&gt;And some small changes to the arrangement of items in the Start Menu/Taskbar&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And along with being terribly designed, the interface of Windows is also slow and bloated. Some animations feel like they forever to finish,Don&amp;rsquo;t get me wrong cool effects and transitions are fine and all, but if you ever try to get anything done fast in Windows, you will have a hard time if you are waiting 2-3 seconds for something like the Start Menu to open up. And speaking of the Start menu, not only is it slow, it provides no helpful features at a glance and requires you to spend considerable time scrolling or searching to actually find anything. Furthermore, it is littered with ads and publications, which are put there without any user consent whatsoever. All of these features actually end up causing harm as well. Microsoft&amp;rsquo;s developers have implemented almost no optimization into their interface, so even simple operations use up ridiculous amounts of system resources. Even just idling your Windows desktop after boot uses up a whopping 1.4-2.0 gigabytes of RAM and anywhere from 15-40 percent of your CPU, depending on the strength of your hardware of course. This not only makes Windows a torturous experience to use on weaker machines, but also slows some of them down because of the constant stress the computers are in. And if you were to look closer, you would find many misaligned texts, badly placed lines, boxes out of order, and so on. The Windows user interface is an absolute mess, and the saddest part is that this terrible experience, something I wouldn&amp;rsquo;t even be bothered to use for free, costs 120 U.S. Dollars.&lt;/p&gt;
&lt;h3 id=&#34;many-security-and-privacy-issues-constant-spying-from-microsoft&#34;&gt;Many security and privacy issues, constant spying from Microsoft&lt;/h3&gt;
&lt;p&gt;It is well known how easy it is to create viruses and harmful malware for Windows computers. Due to the amount of market share the operating system has, the vast majority of hackers have no reason to worry about anything else, since so many of their targets are vulnerable on Windows. Microsoft has a history of being slow with security updates and has yet to find solutions to some very critical issues. The inbuilt security of Windows is also not effective against this, with &amp;ldquo;Windows Defender&amp;rdquo; doing almost nothing to protect your computer, and, in some cases, is a hindrance to the usability of your machine. And alongside having terrible security, Microsoft also takes advantage of it&amp;rsquo;s hundreds of millions of users and gathers their data. The ironic thing however, is that they do this completely legally. Microsoft themselves state in their &lt;a href=&#34;https://privacy.microsoft.com/en-us/privacystatement&#34;&gt;Privacy Statement&lt;/a&gt; that they do, in fact, legally reserve the right to track and analyze whatever we do on out computers, and since most user&amp;rsquo;s don&amp;rsquo;t bother to read these documents, this has gone under the radar for all of these radar, If you don&amp;rsquo;t want to read the privacy statement, here is a short excerpt which gives just about any information you could need:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Finally, we will access, disclose and preserve personal data, including your content (such as the content of your emails, other private communications or files in private folders), when we have a good faith belief that doing so is necessary to:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;1: Comply with applicable law or respond to valid legal process, including from law enforcement or other government agencies;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;2: Protect our customers, for example to prevent spam or attempts to defraud users of the services, or to help prevent the loss of life or serious injury of anyone;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;3: Operate and maintain the security of our services, including to prevent or stop an attack on our computer systems or networks; or&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;4: Protect the rights or property of Microsoft, including enforcing the terms governing the use of the services – however, if we receive information indicating that someone is using our services to traffic in stolen intellectual or physical property of Microsoft, we will not inspect a customer’s private content ourselves, but we may refer the matter to law enforcement.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;They say that you should always read the fine text, or else you will end up regretting it. That anecdote applies here as well. This was a shocker for me when I first found out about it. Microsoft spies on it&amp;rsquo;s users with complete legal rights. Microsoft also has a myriad of other perks that it gains once you buy a Windows license, some of which even force you to comply with any legal action that Microsoft takes. I doubt there is anything more for me to share here, since not much is known about how exactly Microsoft acquires (mostly due to how closed-off the operating system is) this data, we can&amp;rsquo;t exactly track down or opt out of a lot of these programs.&lt;/p&gt;
&lt;h3 id=&#34;software-base-being-almost-completely-proprietary&#34;&gt;Software base being almost completely proprietary&lt;/h3&gt;
&lt;p&gt;If you are someone who uses many different kinds of software, you have probably experienced the frustration that comes with finding good free and open source software on Windows. It&amp;rsquo;s just plain hard to find, the proprietary giants like Microsoft, Google, Adobe, and others have extended their vice grip over the platform to the point that not using their software is an almost objective disadvantage in some cases. And where there is software available, much of what is available is proprietary. Not only is installing good software hard, a lot of the terrible software on a Windows computer comes preinstalled, and furthermore, the user can&amp;rsquo;t even do anything about it. Some good examples of this is Microsoft&amp;rsquo;s suite of office applications (which constantly bug you with subscription offers) and collection of basic software like &amp;ldquo;Photos&amp;rdquo;. There are even games and advertisements that are on your computer from the same time as your Windows Installation. None of this software is open source and little is known about the true purpose of some of it. This makes Windows an especially frustrating experience to use for anyone who (sensibly) isn&amp;rsquo;t willing to dish out big bucks for basic software or computer tools, most of which fail to be worth their price and are usually bloated and slow. Some examples of these can be (once again), Microsoft&amp;rsquo;s Office Suite, Adobe&amp;rsquo;s Acrobat Tools, subscriptions for any &amp;ldquo;premium utility&amp;rdquo; and many other productivity apps you frequently hear about. &lt;strong&gt;Knowing how hard it is sometimes to find good alternatives to paid software on Windows, I&amp;rsquo;ve tried to produce a list of some good choices to use, these have all been verified and used by me, expect another post on that topic by me very soon.&lt;/strong&gt; A more concerning topic, however, is that this proprietary mindset has managed to spread into one of the most delicate regions of Windows software, Anti-Viruses. Most free ones are nearly the verge of being useless and demand far too many system resources. Avast, for example, can cause even my (fairly) fast computer to slow down a very noticeable amount. The same thing happens with other &amp;ldquo;background protection services&amp;rdquo; from organizations like Malwarebytes and McAfee. Most of them just run pointlessly (perhaps even maliciously) in the background and slow down your computer. Aside from anti-viruses, many other important settings and utilities are hidden away from the user (see next subsection), sometimes so well that other companies can use this to sell software that does things already available in Windows. An example of this is partition management tools, most users are unaware of utilities like &lt;code&gt;diskpart&lt;/code&gt; and the Windows Partition manager, this results in many partition managing apps being marketed, a lot of which, ironically, are just frontends for Windows&amp;rsquo; built-in partition management system. In short, the current state of Windows and proprietary software is not great, and it doesn&amp;rsquo;t bode well for the future either. Since as more and more of these tech giants demolish their smaller free and open-source rivals, Windows becomes more of a trap for it&amp;rsquo;s current users.&lt;/p&gt;
&lt;h3 id=&#34;lack-of-control-over-system-too-much-going-on-without-user-consent&#34;&gt;Lack of control over system, too much going on without user consent&lt;/h3&gt;
&lt;p&gt;It&amp;rsquo;s almost as if Windows is designed to be as unintuitive and unusable as possible, with as little control being given to the user as possible whenever there is a chance. You can&amp;rsquo;t control or delay (up to a certain extent) Windows updates, nor can you uninstall most of the programs that come with the computer. This gets more and more annoying as Windows updates come and go, since even if you do manage to debloat your system a little bit, all of those apps get reinstalled when the next update comes around. These updates are a pretty big nuisance as well. You can barely delay them, and when they do come, they can take up to 6 hours to finish and leave your system in an unusable state during that time, and due to their suddenness, some apps may not work for a bit after a recent Windows Update. Another thing that is concerning is the lack of any documentation on the many processes that are always running in the background when you are using your system. Customization options are also lacking, and changing things like the default Windows keybindings is almost impossible without doing some sort of high level hacking, even then, your options are very limited. In short, you are very limited with what you are allowed to do on Windows, this leads it to be an operating system that promotes lazy workflow habits and inefficiency out of the box. Especially for users who don&amp;rsquo;t want to spend hours trying to find out how to change some small thing.&lt;/p&gt;
&lt;h2 id=&#34;now-why-is-linux-any-better&#34;&gt;Now, Why is Linux any better?&lt;/h2&gt;
&lt;p&gt;This subsection too, will be divided into these categories:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;No single operating systems, many distributions to choose from for virtually any purpose&lt;/li&gt;
&lt;li&gt;UI and design has infinite customization potential, there is virtually no limit, and thus, no complaint&lt;/li&gt;
&lt;li&gt;Completely open and secure, everything is known to the user, no corporate ownership&lt;/li&gt;
&lt;li&gt;Completely open source and free software base, almost too many options to choose from sometimes&lt;/li&gt;
&lt;li&gt;Absolute control over system, nothing is inaccessible to the user&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;no-single-operating-system-many-distributions-to-choose-from-for-almost-any-purpose&#34;&gt;No single operating system, many distributions to choose from for almost any purpose&lt;/h3&gt;
&lt;p&gt;Most people who use Windows have absolutely no idea of the code that was used to create the operating system that they use, everything is hidden away in binaries and the original Windows disk image. The case with Linux is nowhere near this, if you wanted to, you could go right now and &lt;a href=&#34;https://github.com/torvalds/linux&#34;&gt;view every line of code&lt;/a&gt; in the Linux Kernel yourself, perhaps even get into a nice conversation with one of the many community based maintainers of it. Though what you see there is not going to be the Linux that you use, it is simply the kernel that &amp;ldquo;Distributions&amp;rdquo; are built upon. When choosing between these distros, you have almost infinite options. Want something stable and reliable for something like a server? Try Debian Stable or OpenSUSE. Like living on the edge and having the latest features and software? Give Arch Linux a try. Interested in Gaming and and easy to use interface? Try System76&amp;rsquo;s POP_OS!. And, if you just want something that works out of the box and gives you a usable and customizable system, try anything like Zorin, Solus, Ubuntu, Manjaro, Linux Mint or hundreds of other choices. There is a distro for almost any purpose, making Linux one of the most extensible, reliable, and usable operating systems ever. The main point here is not just how many features you have, it&amp;rsquo;s that you are provided complete choice and control over your computer and what you install on it. Something that Windows is notorious for not providing.&lt;/p&gt;
&lt;h3 id=&#34;ui-and-design-has-infinite-customization-potential-there-is-virtually-no-limit-and-thus-no-complaint&#34;&gt;UI and design has infinite customization potential, there is virtually no limit, and thus, no complaint&lt;/h3&gt;
&lt;p&gt;Linux offers an almost absurd collection of different desktop environments and window managers, each being completely different and having their own upsides and downsides. There, quite literally, is something for everyone&amp;rsquo;s workflow. If you are still skeptic of what I am saying, check out some of the desktops on &lt;a href=&#34;https://reddit.com/r/unixporn&#34;&gt;r/unixporn&lt;/a&gt;, you&amp;rsquo;ll be fascinated by some of the things that are possible. And for those of you who don&amp;rsquo;t want to spend hours configuring your system, don&amp;rsquo;t worry, desktop environments like &lt;a href=&#34;https://www.gnome.org/&#34;&gt;GNOME&lt;/a&gt; and &lt;a href=&#34;https://kde.org/&#34;&gt;KDE&lt;/a&gt; are designed to be optimized right out of the box, with many beautiful and simple to install themes available to the user. Looking for something similar to the Windows UI? Try out &lt;a href=&#34;https://github.com/linuxmint/Cinnamon&#34;&gt;Cinnamon&lt;/a&gt;, another desktop environment designed with the newly converted Windows user in mind. Have a slower computer? Try giving &lt;a href=&#34;https://xfce.org/&#34;&gt;Xfce&lt;/a&gt; and &lt;a href=&#34;https://lxqt.github.io/&#34;&gt;lxqt&lt;/a&gt; a try, both of which are targeted towards weaker machines. Or, even better, go minimalist with a Window Manager (like me), and find your workflow and efficiency reach new heights. All of the things that I have mentioned also treat your computer far better then windows UI, with the only thing coming close being the massive GNOME, which can use up to 900mb of ram, still trivial compared to what Windows uses. I could go on for hours about the how amazing user interfaces on Linux are, but I&amp;rsquo;m sure you get the point, there is almost no competition here.&lt;/p&gt;
&lt;h3 id=&#34;completely-transparent-and-secure-everything-is-known-to-the-user-no-corporate-ownership&#34;&gt;Completely transparent and secure, everything is known to the user, no corporate ownership&lt;/h3&gt;
&lt;p&gt;One of the main problems that windows had was it&amp;rsquo;s corporate ownership. Almost everything that Microsoft did for the operating system and/or it&amp;rsquo;s users had a financial incentive behind it. Now while this isn&amp;rsquo;t inherently a bad thing (companies have to make money somehow), the methods Microsoft employed aren&amp;rsquo;t the most ethical and this have made many users, including me, look for something more morally sound. Linux provides exactly that. With most of it&amp;rsquo;s distributions being community owned and supported, almost every line of code can be verified to be non malicious. Some distributions are owned by corporations as well, notably enterprise ones like [RHEL(), these, however, are still completely open source and secure, and are intended for more professional use cases. Either way, choice is once again given to the user, if one distribution feels uncomfortable, you have dozens more to choose from. Distributions and their communities are also completely open about their development processes and bugs, and are constantly working together to solve these problems and further stabilize the distributions. Nothing is hidden from users, leading to far more interaction and active development.&lt;/p&gt;
&lt;h3 id=&#34;fully-open-source-and-free-software-base&#34;&gt;Fully Open Source and Free software base&lt;/h3&gt;
&lt;p&gt;Linux has always, and does still, pride itself on being a completely open and free operating system. On top of that, the Linux Community has also done a fantastic job of making sure that all software that is on Linux is also Free and Open-source. This includes drivers, firmware, and even system utilities for many systems.&lt;/p&gt;
&lt;h3 id=&#34;absolute-control-over-system-nothing-is-inaccessible-to-the-user&#34;&gt;Absolute control over system, nothing is inaccessible to the user&lt;/h3&gt;
&lt;p&gt;Linux distributions allow root access to the system by default. And there are dozens of built in utilities that let the user access, change, or remove anything they want from the system. While this can be dangerous if the user is not aware of what they are doing, it also gives immense amounts of freedom of control to anyone using the system. You can uninstall or install any application you want any time. All dependencies and requirements are available to you via the package manager. You have full access to the entirety of the Linux Filesystem, and can manually configure any program by hand if you so wish. Linux is friendly to both advanced and new users, with many concepts being simple and intuitive to understand. Instead of having to deal with downloading and installing programs (and worrying about viruses), all software is managed via your distro&amp;rsquo;s &amp;ldquo;package manager&amp;rdquo;, which, of course, is under your control.&lt;/p&gt;
&lt;h2 id=&#34;final-note&#34;&gt;Final note&lt;/h2&gt;
</description>
     </item>
   
     <item>
       <title>Some of My Favorite Software</title>
       <link>https://co1ncidence.github.io/posts/some-cool-software/</link>
       <pubDate>Mon, 17 Aug 2020 10:43:39 -0500</pubDate>
       
       <guid>https://co1ncidence.github.io/posts/some-cool-software/</guid>
       <description>&lt;p&gt;This is a list of some of the best software that I have come across in my journey using Linux. I highly recommend that you try them out and maybe even give the developers a well earned star on Github to show your support :)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Links to the software&amp;rsquo;s Github page are in the headers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;maimhttpsgithubcomnaelstrofmaim-the-better-screenshot-tool&#34;&gt;&lt;a href=&#34;https://github.com/naelstrof/maim&#34;&gt;Maim&lt;/a&gt;, the better screenshot tool&lt;/h2&gt;
&lt;p&gt;One of the most important pieces of software you can have is something to capture you display, while &lt;a href=&#34;https://github.com/dreamer/scrot&#34;&gt;scrot&lt;/a&gt; does the job quite well, it has issues with selecting areas and windows, which is where Maim comes in, it does basically the same thing as scrot but without any of the rendering and selection issues. Also, every screenshot you see on this blog was taken using Maim.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Fun fact:&lt;/strong&gt; bind this command in your hotkey daemon&amp;rsquo;s config and you can use it to easily take and paste screenshots:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;maim -s -u | xclip -selection clipboard -t image/png&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;sxivhttpsgithubcommuennichsxiv-simple-x-image-viewer&#34;&gt;&lt;a href=&#34;https://github.com/muennich/sxiv&#34;&gt;SXIV&lt;/a&gt;, Simple X Image Viewer&lt;/h2&gt;
&lt;p&gt;Many image viewers out there are usually needlessly large programs with unnecessary features, SXIV aims to just be a simple image viewer for X. And it does just that. You can zoom, pan, have a thumbnail mode, and just about anything you really need.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/0jfJqSjx/image.png&#34; alt=&#34;picture-of-sxiv&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;giphhttpsgithubcomphischgiph-simple-gif-recorder&#34;&gt;&lt;a href=&#34;https://github.com/phisch/giph&#34;&gt;Giph&lt;/a&gt;, Simple .gif Recorder&lt;/h2&gt;
&lt;p&gt;Exactly what it claims to be, Giph a simple little utility that makes use of FFmpeg&amp;rsquo;s recording abilities to make it easy to record gifs of all, or sections of your screen. You can even use slop to select a section of your screen and then output it as a gif file, which is very convenient. And, like with maim, every gif that you see on this blog was recorded using Giph.&lt;/p&gt;
&lt;p&gt;Hi phisch &lt;strong&gt;:)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/Y9trBsWG/image.png#float-right&#34; alt=&#34;picture-of-cfm&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;cfmhttpsgithubcomwillecclescfm-cactus-file-manager&#34;&gt;&lt;a href=&#34;https://github.com/WillEccles/cfm&#34;&gt;cfm&lt;/a&gt;, Cactus File Manager&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;ve all used things like Ranger at some point, but sometimes you just need a small little file browser to get around directories quickly or make a quick change to a file. cfm is great for things like this, since it doesn&amp;rsquo;t have any unnecessary features and thus remains very fast. It also looks a bit nicer than &lt;a href=&#34;https://github.com/dylanaraps/fff&#34;&gt;fff&lt;/a&gt;, it&amp;rsquo;s main &amp;ldquo;competitor, because of it&amp;rsquo;s full line highlighting and neat little indent on the current item. Small things, I know, but they make a sizable difference.&lt;/p&gt;
&lt;h2 id=&#34;ripcordhttpscancelfmripcord-lightweight-discordslack-client&#34;&gt;&lt;a href=&#34;https://cancel.fm/ripcord/&#34;&gt;Ripcord&lt;/a&gt;, Lightweight Discord/Slack Client&lt;/h2&gt;
&lt;p&gt;If you&amp;rsquo;ve used the normal Discord electron client, you are most likely aware of how resource intensive and bloated it can be, especially when it comes to ram usage. This is where Ripcord comes in, it is ridiculously lightweight and has most of the features you could want as well, including some very snappy movement via keybinds. It also has customizable colors out of the box.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/t4G8cVP7/image.png&#34; alt=&#34;picture-of-ripcord&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;qalchttpsgithubcomqalculatelibqalculate-stupidly-powerful-cli-calculator&#34;&gt;&lt;a href=&#34;https://github.com/Qalculate/libqalculate&#34;&gt;Qalc&lt;/a&gt;, Stupidly Powerful CLI Calculator&lt;/h2&gt;
&lt;p&gt;The days of having to turn to Google or some proprietary Internet service just for the sake of getting some quick maths done is over. With Qalc, not only can you easily do any number of regular mathematical operations, you can also do a number of verbose calculations for things like unit conversions. You may not get what I mean so here is an example:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/J4FbfhFb/image.png&#34; alt=&#34;picture-of-qalc&#34;&gt;&lt;/p&gt;
&lt;p&gt;And, if you aren&amp;rsquo;t up for doing math in the terminal, there is also an equally powerful &lt;a href=&#34;http://qalculate.github.io/&#34;&gt;GUI Version&lt;/a&gt;.&lt;/p&gt;
</description>
     </item>
   
     <item>
       <title>Linux and CLI, a 101</title>
       <link>https://co1ncidence.github.io/posts/bash-basics-for-nubs/</link>
       <pubDate>Sat, 15 Aug 2020 14:15:28 -0500</pubDate>
       
       <guid>https://co1ncidence.github.io/posts/bash-basics-for-nubs/</guid>
       <description>&lt;p&gt;When I first started with Linux, and especially the command line, It was difficult to find a truly optimal and comprehensive guide to these things. While most tutorials were nice and gave me a good starting point, they usually provided inefficient information or didn&amp;rsquo;t showcase the most optimal commands/strategies. I am making this list as more of a dump for all of the things that I have learned about bash so far, which isn&amp;rsquo;t too much compared to some but I like to think that I know something. So without further ado, here is my bash basics list to boost you up in the Linux elitist ladder. And as a final note, unless specified, all of these commands are being run from the default (home) folder that your terminal puts you in.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Always remember: RTFM: &amp;ldquo;Read The Fucking Manual&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;first-some-terminology-and-tips&#34;&gt;First, some Terminology and Tips&lt;/h2&gt;
&lt;p&gt;The Terminal is simply an interface to interact with your computer, by itself, it is nothing but an empty program. A terminal (in 99.99% of cases) needs a &lt;strong&gt;Shell&lt;/strong&gt; to function. A shell is an interactive text interface for the user, and the &lt;strong&gt;Terminal&lt;/strong&gt; is the tool most often used to run commands via the shell. There are many shells out there, thought this tutorial in specific will be focusing on the most is &lt;strong&gt;Bash&lt;/strong&gt;, the most popular shell in use right now and the default shell of most &lt;a href=&#34;https://en.wikipedia.org/wiki/Linux&#34;&gt;Linux&lt;/a&gt; distributions. Bash allows you to run commands from other programs or utilities, common ones you&amp;rsquo;ll mostly likely need are those from something like the &lt;a href=&#34;https://en.wikipedia.org/wiki/GNU_Core_Utilities&#34;&gt;GNU Coreutils&lt;/a&gt;, and any other programs you might use daily. Once you have familiarized yourself with these terms, you can get on to actually using the command line. And finally, and most likely &lt;strong&gt;The Most Important Thing You Will Read Here&lt;/strong&gt;, you have to always be willing to read documentation and official manuals, don&amp;rsquo;t go around annoying others for help. Some things to do when encountering issues can include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The official manual of the program, accessed by running the man command for that program in the terminal&lt;/li&gt;
&lt;li&gt;Searching through the GitHub issues of the program you are struggling with to find a similar or identical problem&lt;/li&gt;
&lt;li&gt;Searching through online forums like &lt;a href=&#34;https://stackoverflow.com/&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reading Wiki pages on amazing websites like the &lt;a href=&#34;https://wiki.archlinux.org/&#34;&gt;ArchWiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Searching &lt;a href=&#34;https://reddit.com&#34;&gt;Reddit&lt;/a&gt; for similar problems or making a post about your own&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Following these steps will lead you to your solution far more often than not.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;second-some-linux-basics&#34;&gt;Second, Some Linux Basics&lt;/h2&gt;
&lt;p&gt;In this section I will be discussing some basics Linux concept, terminology, and tip/tricks that every user should know before they dive deeper into the operating system.&lt;/p&gt;
&lt;h3 id=&#34;the-linux-file-system&#34;&gt;The Linux File System&lt;/h3&gt;
&lt;p&gt;In Linux and other UNIX-based operating systems, almost everything is available to the user as a file or folder. This results in your system being essentially just one massive file system. Imagine it this way, your entire Linux install is one huge folder, called &lt;code&gt;/&lt;/code&gt;, this folder contains everything your system and the programs on it need to function and work together. You can use the &lt;code&gt;tree&lt;/code&gt; command on the base &lt;code&gt;/&lt;/code&gt; folder to better visualize this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/GpV0nGcD/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;This command only shows the biggest, main folders on your system. Each of these is further subdivided into even more different folders and files. Going over the entire filesystem is an extremely daunting task, so I will just give a short briefing on the general purpose of each folder.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/bin/&lt;/code&gt;: This is a symlink, or symbolic link, to the &lt;code&gt;/usr/bin&lt;/code&gt; folder, &lt;code&gt;bin&lt;/code&gt; is short for binary. Binaries are the files that launch various programs on your computer, for example, Firefox will have it&amp;rsquo;s binary here as &lt;code&gt;/usr/bin/firefox&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/dev/&lt;/code&gt;: This stands for &amp;ldquo;Device&amp;rdquo;, and is where all the devices connected to your system have there appropriate files, this can contain drives or peripherals. You will find your hard disks and their partitions labeled as &lt;code&gt;/dev/sda-z|1-9&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/&lt;/code&gt;: Originally stood for &amp;ldquo;etcetera&amp;rdquo;, now this is where all of the global configuration files of all the programs on your system are stored, such as, for example, those used by your init system or display manager&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/home/&lt;/code&gt;: This is where all of the home folders and files of all (normal) users on your system are, it is separated into folders with the usernames of said users, and contains specific files only accessible to said users. Here is where you will be spending around 90% of your time as a Linux user. Home folders usually contain the standard &amp;ldquo;Documents&amp;rdquo; or &amp;ldquo;Pictures&amp;rdquo; folders and the like, but also contain some important hidden folders, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;.cache/&lt;/strong&gt;: this is where all of your users program&amp;rsquo;s store their cache files&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;.config/&lt;/strong&gt;: this is where all of your user-specific configuration files are stored&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;.local/&lt;/strong&gt;: this is the same (in terms of function) as the &lt;strong&gt;/usr/&lt;/strong&gt; folder but for your current user only
It is important to get to know your home folder well and to keep it nice and tidy, it is basically your &amp;ldquo;workspace&amp;rdquo; on a Linux system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;/lib/ and /lib64&lt;/code&gt;:&lt;/p&gt;
&lt;h2 id=&#34;third-getting-to-know-bash&#34;&gt;Third, Getting to Know Bash&lt;/h2&gt;
&lt;p&gt;Here I will be explaining some simple bash concepts that will help speed you along your terminal journey, knowing these is necessary if you want to truly be efficient on the command line:&lt;/p&gt;
&lt;h3 id=&#34;autocomplete&#34;&gt;Autocomplete&lt;/h3&gt;
&lt;p&gt;Bash has built in &lt;strong&gt;tab-complete&lt;/strong&gt;, so instead of typing in entire long names of folders and/or programs, you can just type in a few letters and press the &lt;code&gt;tab&lt;/code&gt; key, Bash will then auto-type the rest of the name for your. If there are multiple possibilities, Bash will just output them all, so you can choose the one you want.&lt;/p&gt;
&lt;h3 id=&#34;global-aliases&#34;&gt;Global Aliases&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;..&lt;/code&gt; is an alias for the parent folder of the directory you are currently working inside, and the word &lt;code&gt;.&lt;/code&gt; is the alias for the folder currently occupied. These are useful to know as they can save you precious time typing in long directory paths when you are working with more advanced commands. These aliases can be used with just about any command so be careful with them.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;~&lt;/code&gt; is an alias that stands for &lt;code&gt;/home/username&lt;/code&gt;, with &amp;ldquo;username&amp;rdquo; being the user name of the currently active user. It can be used with many commands, so once again, be careful with what you do. If you are ever unsure, just remind yourself that it &lt;strong&gt;directly&lt;/strong&gt; translates to &lt;code&gt;/home/username&lt;/code&gt;, that&amp;rsquo;ll help you get a bearing on the command you are about to run.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;!!&lt;/code&gt; is an alias for the last command run. For example, if you ran a command but forgot to add &lt;code&gt;sudo&lt;/code&gt; or something, you can simply run &lt;code&gt;sudo !!&lt;/code&gt; instead of typing out the whole of the previous command.&lt;/p&gt;
&lt;h3 id=&#34;conditional-execution&#34;&gt;Conditional Execution&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; is a character you can insert after a command and use to spawn command outputs in the background, and &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; can be used to implement &lt;strong&gt;Conditional Execution&lt;/strong&gt;, which means you can run multiple commands in succession, for example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# command2 will only run if command1 is successful&lt;/span&gt;
command1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; command2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also do another kind of sequential execution in the command line, using the &lt;code&gt;||&lt;/code&gt; function, this works in a similar way to &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; but instead of running a command after the execution of the previous one, it runs a second command only if the first one failed to run, sort of like a &amp;ldquo;Plan B&amp;rdquo; if you will. Here is an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# command2 will only run if command1 fails for any reason&lt;/span&gt;
command1 &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; command2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;pipes-in-bash&#34;&gt;Pipes In Bash&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Pipes&lt;/strong&gt; are things you can use to filter one command through another, thus allowing for things like controlling outputs of commands. Pipes have many uses so I recommend that you look more into them as there is no way I can go into full depth here. Here is an example of a pipe being used to filter the output of of &lt;code&gt;fc-list&lt;/code&gt; through &lt;code&gt;grep&lt;/code&gt; to only show fonts with a certain name.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;fc-list | grep Roboto
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;sending-command-outputs-to-different-places&#34;&gt;Sending command outputs to different places&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;&amp;gt;&lt;/code&gt; character works in a similar fashion to pipes, but instead of filtering the command through another, it pushes the output to a file of your choice. The amount of &lt;code&gt;&amp;gt;&lt;/code&gt;&#39;s you use also makes a difference, for example, this command will print the word &amp;ldquo;hello&amp;rdquo; and push it as the first word in a new file called &amp;ldquo;file.txt&amp;rdquo;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt; &amp;gt; file.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Using two &lt;code&gt;&amp;gt;&lt;/code&gt;&#39;s provides a different result, instead of creating a new file containing the outputted words, it will append the output to an existing file that you point it to. A common example of this is when adding a heading to a GitHub README:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;# Heading&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; README.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;keyboard-shortcuts&#34;&gt;Keyboard Shortcuts&lt;/h3&gt;
&lt;p&gt;Unknown to me for quite a while during my usage of the terminal in Linux was that there were many keyboard shortcuts that could be used to navigate and control text much faster in the command line. These are mostly inherited from some of the keyboard shortcuts in editors like &lt;code&gt;emacs&lt;/code&gt;, from what I can tell. Here are the ones I find myself using most often:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ctrl + arrow keys&lt;/code&gt; will move the cursor one word in the respective direction&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ctrl + b/f&lt;/code&gt; will move the cursor backwards and forwards respectively&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ctrl + w&lt;/code&gt; will delete the previous word&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ctrl + h&lt;/code&gt; works the same way as &lt;code&gt;backspace&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ctrl + d&lt;/code&gt; will delete the character under the cursor&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ctrl + a&lt;/code&gt; moves the cursor all the way back to the prompt&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ctrl + u&lt;/code&gt; will delete all text entered&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ctrl + r&lt;/code&gt; will initiate a reverse search for previously entered commands&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ctrl + l&lt;/code&gt; will clear everything in the terminal&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ctrl + n/p&lt;/code&gt; will cycle you through previously entered commands&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ctrl + m/j&lt;/code&gt;, both work the same way as &lt;code&gt;enter&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;environment-variables&#34;&gt;Environment Variables&lt;/h3&gt;
&lt;p&gt;Environment variables are basically just global settings that different programs use to determine user preferences, they look something like this, a variable name followed by a &lt;code&gt;=&lt;/code&gt; and the environment setting in quotes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;TERMINAL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;alacritty&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Environment variables can be set using the &lt;code&gt;export&lt;/code&gt; command, for example, if I wanted to change my &lt;code&gt;TERMINAL&lt;/code&gt; variable to &lt;code&gt;st&lt;/code&gt;, I would use this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;export TERMINAL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;st&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This would set the default terminal used by other programs to &lt;code&gt;st&lt;/code&gt; instead of whatever I was using before. Many different programs have their own environment variables, though I don&amp;rsquo;t recommend messing with them unless the manual you are reading asks you to do so.&lt;/p&gt;
&lt;h2 id=&#34;shell-aliases&#34;&gt;Shell Aliases&lt;/h2&gt;
&lt;p&gt;You may or not have noticed a file called &lt;code&gt;.bashrc&lt;/code&gt; in your Home Directory. This file is the configuration file of the Bash Shell, and can be used to do some cool things, one of which is creating shell aliases. Shell aliases can be used to simplify long and complicated, or even simply hard-to-type commands into smaller ones. To add a shell alias, simply append a line following this syntax to the end of the &lt;code&gt;.bashrc&lt;/code&gt; file, replacing the placeholder words with a word/command of your choice:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;alias newcommand&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;long-and-annoying-old-command&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once you&amp;rsquo;ve finished this (hopefully using Nano), simply save the file and restart your shell or terminal. Try typing in your new command, you will see that your chosen word behaves the same as that annoying command that you chose to replace.&lt;/p&gt;
&lt;p&gt;The possibilities with shell aliases are almost infinite, but for some inspiration, here are some of the ones that I am currently using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;alias ls&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;exa --group-directories-first&amp;#34;&lt;/span&gt;
alias walls&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cd ~/usr/pic/wallpapers/&amp;#34;&lt;/span&gt;
alias df&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;df -h /dev/sda3&amp;#34;&lt;/span&gt;
alias nvimrc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nvim ~/.config/nvim/init.vim&amp;#34;&lt;/span&gt;
alias c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;clear&amp;#34;&lt;/span&gt;
alias download&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;youtube-dl -x --audio-format mp3&amp;#34;&lt;/span&gt;
alias shuffle&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;feh --bg-fill --randomize ~/usr/pic/wallpapers/&amp;#34;&lt;/span&gt;
alias class&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cd ~/usr/doc/school/&amp;#34;&lt;/span&gt;
alias notes&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cd ~/usr/doc/school/awo/&amp;#34;&lt;/span&gt;
alias t&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;todo.sh&amp;#34;&lt;/span&gt;
alias du&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;du -m | sort -n&amp;#34;&lt;/span&gt;
alias web&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cd ~/opt/mysite/&amp;#34;&lt;/span&gt;
alias gif&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;giph -s ~/usr/vid/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;+%Y-%m-%d_%H-%M-%S&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.gif&amp;#34;&lt;/span&gt;
alias free&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;free -h&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Feel free to use any of them, and don&amp;rsquo;t limit yourself, the possibilities with aliases are almost infinite!&lt;/p&gt;
&lt;h3 id=&#34;various-other-cool-things&#34;&gt;Various other cool things&lt;/h3&gt;
&lt;p&gt;You can use the &lt;code&gt;clear&lt;/code&gt; command to clear everything in your terminal, usually used to give you a fresh working space. It is important to know what &lt;code&gt;clear&lt;/code&gt; does not change anything regarding your working directory or it&amp;rsquo;s contents, it just clears terminal output.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set&lt;/code&gt; can be used to temporarily set or unset certain global settings.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;reset&lt;/code&gt; will restart your shell and terminal and make it behave as if you just opened it for the first time.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sleep&lt;/code&gt; is an especially cool command, it can be used in conjunction with &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; to essentially but a command on a countdown, for example, running this command will tell your system to way 1600 seconds before running the next command in the sequence:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;1600&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; clear
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;And make sure you are acquainted with these 2 files, both are located in your home directory:&lt;/strong&gt; First, &lt;code&gt;.bash_history&lt;/code&gt;, which contains the last 2000 commands you ran using bash, allowing you to identify the ones you want easily. Second, &lt;code&gt;.bashrc&lt;/code&gt;, this is your bash configuration file, which can be used to make many different changes to your shell.&lt;/p&gt;
&lt;h2 id=&#34;file-management-in-the-command-line&#34;&gt;File Management In The Command Line&lt;/h2&gt;
&lt;p&gt;You can use the &lt;code&gt;pwd&lt;/code&gt; command to display what directory you are currently in, this is useful as a beginner to get a better feel of where you are in your system.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd&lt;/code&gt; stands for &amp;ldquo;change directory&amp;rdquo;, you can use this command to enter and leave directories. It is not limited to neighboring directories, however, you can use &lt;code&gt;cd&lt;/code&gt; to move from one side of your computer to another, provided you don&amp;rsquo;t mess up typing in the names of folders. First thing to note is that a &lt;code&gt;/&lt;/code&gt; is not necessary after a folder name:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#these 2 commands are the same&lt;/span&gt;
cd ~/folder1/folder2/
cd ~/folder1/folder2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can use the aliases previously mentioned to navigate folders as well.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#running this moves you to the parent folder&lt;/span&gt;
cd ..
&lt;span style=&#34;color:#75715e&#34;&gt;#running this does nothing, as you are moving to the same folder&lt;/span&gt;
cd .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, here are some examples of the &lt;code&gt;cd&lt;/code&gt; command in use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#this will place you in the polybar config folder&lt;/span&gt;
cd ~/.config/polybar/
&lt;span style=&#34;color:#75715e&#34;&gt;#this will move you to your root directory&lt;/span&gt;
cd /
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Another good thing to know is that running just &lt;code&gt;cd&lt;/code&gt; will take you back you your home folder:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#no matter where you run this, it will take you back to home&lt;/span&gt;
cd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;ls&lt;/code&gt; is one of the commands you will use the most, this command lists all of the files and folders in the current folder, allowing you to get a better idea of where you are. Here is an example of the &lt;code&gt;ls&lt;/code&gt; command in use:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/9Q1wkZSB/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;touch&lt;/code&gt; is used (mostly) to create a new, empty file in the folder you are currently occupying, the filetype can vary based on name extension, for example, to create a new &lt;code&gt;css&lt;/code&gt; file you would run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;touch file.css
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also use touch to create files in other folders:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;touch ~/Documents/file.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;mkdir&lt;/code&gt; is like &lt;code&gt;touch&lt;/code&gt;, but instead of creating a single file it creates an entire directory, and like &lt;code&gt;touch&lt;/code&gt;, this can be used to create a folder anywhere on your system, provided you have the right permissions to do so, here is an example of the &lt;code&gt;mkdir&lt;/code&gt; command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;mkdir folder/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;mv&lt;/code&gt; is a command used to move files from one location to another, and because of this it can also be used to replace a file with another. It is also possible to change the name of a file when moving it. Example usage:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;mv /usr/share/file.txt ~/Documents/newfile.txt
&lt;span style=&#34;color:#75715e&#34;&gt;#mv can also be used to rename files&lt;/span&gt;
mv file.txt file2.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;cp&lt;/code&gt; works the same way as &lt;code&gt;mv&lt;/code&gt;, but instead of moving a file it creates a copy of the original file in the new location, and like &lt;code&gt;mv&lt;/code&gt;, the resulting file can have new name. Example usage:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cp ~/.local/bin/command /usr/bin/command2
&lt;span style=&#34;color:#75715e&#34;&gt;#if name is not a concern, just specify resulting directory&lt;/span&gt;
cp ~/.local/bin/command /usr/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can use &lt;code&gt;cp&lt;/code&gt; and &lt;code&gt;mv&lt;/code&gt; with multiple files as well, for example, this is how you would move multiple image files from one folder to another:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cp 1.png 2.png 3.png ~/Pictures/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As you can see, all you have to do is list all the files you would like to copy/move with a space in between them, this will stage them all for transition.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rm&lt;/code&gt; is another very useful, but dangerous command. It stands for &amp;ldquo;remove&amp;rdquo; and can be used to remove any
However, unlike the other file management commands, &lt;code&gt;rm&lt;/code&gt; cannot remove folders by default, this requires the use of a couple &lt;strong&gt;Flags&lt;/strong&gt;, which are just letters/words you can attach to a command to unlock abilities that the command cannot do by default. For &lt;code&gt;rm&lt;/code&gt; to be able to delete a whole folder, it requires the &lt;code&gt;-r&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt; flags, here is an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;rm -r -f folder/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Though separating flags is not necessary, you can just combine them into one flag like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;rm -rf folder/
&lt;span style=&#34;color:#75715e&#34;&gt;#you can also use the &amp;#34;rmdir&amp;#34; command, though only on empty folders&lt;/span&gt;
rmdir folder/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Thus is how you can use &lt;code&gt;rm&lt;/code&gt; to remove folders as well as individual files.&lt;/p&gt;
&lt;h4 id=&#34;managing-files-in-bulk-using-file-globbing&#34;&gt;Managing Files in Bulk using &amp;ldquo;File Globbing&amp;rdquo;&lt;/h4&gt;
&lt;h4 id=&#34;elevating-permissions&#34;&gt;Elevating Permissions&lt;/h4&gt;
&lt;p&gt;Sometimes, your user may not have the necessary permissions to execute certain commands on a file or folder, this is because the owner of said file/folder is the &lt;strong&gt;root user&lt;/strong&gt;, to obtain the abilities of the root user, you just have to place the word &lt;code&gt;sudo&lt;/code&gt; behind your command. &lt;code&gt;sudo&lt;/code&gt; stands for &amp;ldquo;Super User DO&amp;rdquo;, and will allow you to run commands with elevated (or &amp;ldquo;root&amp;rdquo;) permissions, here is an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo apt install firefox
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command will install &lt;code&gt;firfox&lt;/code&gt; on your system. You will almost always need root permission to install a package on your system. Root permissions can be very dangerous however, as you can very easily delete everything on your computer. So it is vital to remember that whenever something requires you to be root to run a command, always make sure you know what you are doing, and be aware that there is a reason that there is a reason for a password to be between you and the execution of this command. Stay safe.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chmod&lt;/code&gt; is a command that can be used to change the permissions a file has. These permissions include reading, writing, and changing whether a file can be executable or not. You can use &lt;code&gt;chmod&lt;/code&gt; plus/minus a letter like this: &lt;code&gt;chmod +x&lt;/code&gt; to add or remove a permission from a file. To view the permissions of all files and folders in your current directory, run the &lt;code&gt;ls&lt;/code&gt; command with the &lt;code&gt;-l&lt;/code&gt; flag:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/BZx6y2P1/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;file-viewing--and-output-controlfiltering&#34;&gt;File Viewing  and Output Control/Filtering&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;cat&lt;/code&gt; command is one of the first to know when viewing files, running &lt;code&gt;cat&lt;/code&gt; on a file which contains any sort of text will cause your terminal to output the full contents of your file, for example, running:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cat .bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Will show you the contents of your &lt;code&gt;.bashrc&lt;/code&gt; file, otherwise known as the bash shell configuration file, more about this later. &lt;code&gt;cat&lt;/code&gt; is very useful when you want to look at certain content in a file but don&amp;rsquo;t want to open it in your editor.
You may realize. Here is an example of the &lt;code&gt;cat&lt;/code&gt; command being used:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/63tSQszK/out.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;However, that &lt;code&gt;cat&lt;/code&gt; can be annoying when used on longer files, as you have to manually scroll back if you want to view any content near the beginning of the file. This is where another, very useful command comes in. The &lt;code&gt;less&lt;/code&gt; command is similar to &lt;code&gt;cat&lt;/code&gt;, but instead of just throwing all of the output at you and leaving you alone to manage it, &lt;code&gt;less&lt;/code&gt; allows you to view the file in a scrolling window, with the top of the file being the beginning. You can then use the Up and Down arrow keys of J and K to navigate the file as you want. For those of you comfortable with them, Vim keybindings work in &lt;code&gt;less&lt;/code&gt; as well. As you can see here, the experience is far more intuitive:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/dQ4ML0zx/out.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;Sometimes, however, we have too much output of a command, one example of such a problematic command can be the &lt;code&gt;fc-list&lt;/code&gt; command, which lists all fonts currently installed on your system. You can filter the output of this command using &lt;code&gt;grep&lt;/code&gt;, an extremely powerful search utility. &lt;code&gt;grep&lt;/code&gt; however, usually requires piping, which I talked about earlier. Here is a basic example of the usage of &lt;code&gt;grep&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;This command will have hundreds of lines of output, displaying all of your fonts:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;fc-list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command, however, will filter out every result and only show results containing the word &amp;ldquo;Roboto&amp;rdquo;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;fc-list | grep Roboto
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;grep&lt;/code&gt; is not, however, limited to command outputs, it can also be used to filter out the lines of a file that word that you are looking for. For example, running &lt;code&gt;grep &amp;quot;hello&amp;quot; file.txt&lt;/code&gt; will output all the lines of &lt;code&gt;file.txt&lt;/code&gt; that contain the word &amp;ldquo;hello&amp;rdquo;. &lt;code&gt;grep&lt;/code&gt; has a myriad of flags that can be used to futher increase the usefulness of a command:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;B &lt;number&gt;&lt;/strong&gt; will show &lt;number&gt; of lines before the lines you searched for along with the results, providing some context&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C &lt;number&gt;&lt;/strong&gt; does the same thing as &lt;strong&gt;B&lt;/strong&gt; but with the context lines being after instead of before&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;E&lt;/strong&gt; will interpret the text you are searching for as a regular expression&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;i&lt;/strong&gt; will search without being case sensitive&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;l&lt;/strong&gt; this works when &lt;code&gt;grep&lt;/code&gt; is used on a directory, printing out just the files containing the searched word instead of the lines&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;r&lt;/strong&gt; will allow &lt;code&gt;grep&lt;/code&gt; to search directories recursively, bringing results from subfolders as well&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;v&lt;/strong&gt; inverts &lt;code&gt;grep&lt;/code&gt;, printing out every line that doesn&amp;rsquo;t contain the searched word&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;editing-files-using-gnu-nano&#34;&gt;Editing Files Using GNU Nano&lt;/h2&gt;
&lt;p&gt;Throughout your Linux journey, there will be many, and I mean many, times where you will have to make a quick edit to some configuration file of some sort. Editing these files with a visual editor can be a pain as you have to run the editor as root, find the file you want to edit, and then finally get to editing it. As a solution to this, computers running any GNU/Linux Distribution usually come with a terminal editor installed, called &lt;a href=&#34;https://en.wikipedia.org/wiki/GNU_nano&#34;&gt;Nano&lt;/a&gt;. Nano is an editor that allows you to edit any text file through the terminal. Here is an example of me editing the &lt;code&gt;/etc/fstab&lt;/code&gt; file using Nano (note the use of &lt;code&gt;sudo&lt;/code&gt; to access this file):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/NMsJc6ff/out.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;Nano has many keyboard shortcuts and is a quite featured editor, though you will most likely only be using it for quick edits, as anything bigger would be better done in a real editor. The only real shortcut to know in Nano is &lt;strong&gt;Ctrl + X&lt;/strong&gt;, this saves and exits the file, prompting you before doing so as well.&lt;/p&gt;
&lt;h2 id=&#34;time-in-the-command-line&#34;&gt;Time In The Command Line&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;date&lt;/code&gt; command can be used to quickly display the current date and time on the terminal, while this is cool it doesn&amp;rsquo;t really have much of a use in day to day command line usage, it is more effective in scripts and programs, as a reliable way to get system time. Here is an example of the &lt;code&gt;date&lt;/code&gt; command in use:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/J7dTfBwM/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is great output from a readability standpoint, but if you are writing a script, it is not easily parseable, pass the &lt;code&gt;-Im&lt;/code&gt; flag along with &lt;code&gt;date&lt;/code&gt; to get more usable output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/mrRVYY9N/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;Another time related command you can use is &lt;code&gt;uptime&lt;/code&gt;, this command outputs the amount of time the system has been on for, this can be helpful to know for a variety of reasons. By default, the &lt;code&gt;uptime&lt;/code&gt; command has very messy output, so run it with the &lt;code&gt;-p&lt;/code&gt; flag to make it more readable, here is an example:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/4dy6PBxt/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;time&lt;/code&gt; command can be used to measure how much time another program takes to open up, this can be useful when diagnosing problems regarding system performance issues. Here is an example of the &lt;code&gt;time&lt;/code&gt; command being used to display the startup time of the Alacritty Terminal:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/W4WWsDDG/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;process-management-in-the-terminal&#34;&gt;Process Management in the Terminal&lt;/h2&gt;
&lt;p&gt;Processes in Linux are usually given certain &lt;code&gt;pid&lt;/code&gt;&#39;s, having this form of identification allows them to be easily tracked and managed, mostly this is used to take care of or kill problematic processes. There are 2 commands that can be used to find the &lt;code&gt;pid&lt;/code&gt; of a program. You can use either &lt;code&gt;pidof&lt;/code&gt; of &lt;code&gt;pgrep&lt;/code&gt;. For the purposes of this guide, I will be using the &lt;code&gt;pgrep&lt;/code&gt; command. Here is an example of me using &lt;code&gt;pgrep&lt;/code&gt; to find the &lt;code&gt;pid&lt;/code&gt; of Alacritty, a program that I know is currently running:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/d1g5TzjD/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;Though, while this command is useful in a limited use case, you will most likely find it easier to just use the &lt;code&gt;pkill&lt;/code&gt; command. &lt;code&gt;pkill&lt;/code&gt; allows you to kill a process using a variety of signals, 15 to be exact. The only ones that really matter, however, are signals 9 and 15, otherwise known as &lt;code&gt;SIGKILL&lt;/code&gt; and &lt;code&gt;SIGTERM&lt;/code&gt; respectively. &lt;code&gt;SIGTERM&lt;/code&gt; will kill a process off safely and slowly, but sometimes this is not enough, so you can use &lt;code&gt;SIGKILL&lt;/code&gt; to immediately terminate it, but I recommend trying your best not to resort to that option, as it could cause problems. Different signals can be invoked using &lt;strong&gt;Flags&lt;/strong&gt;. &lt;code&gt;pkill&lt;/code&gt;, however, defaults to using the &lt;code&gt;SIGTERM&lt;/code&gt; signal, so for 99% of your use cases just using &lt;code&gt;pkill&lt;/code&gt; serves as enough, as shown in this example:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Not much to see here, the process either dies or there is an error:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/25KwPPJT/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;Another thing to take into account when dealing with running processes is memory usage, you can use the &lt;code&gt;free&lt;/code&gt; command with the &lt;code&gt;-h&lt;/code&gt; flag to display the amount of memory currently being used:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/HnQ98jLP/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;But what if you wanted to see an interactive interface from which you could manage processes and see their relative resource usage, a &amp;ldquo;task manager&amp;rdquo; if you will. One of the programs you will find yourself most frequently using is &lt;code&gt;htop&lt;/code&gt;, while not normally included with most Linux Distros, it is a must have utility, a lightweight and easy to use terminal task manager. I suggest you check out the program&amp;rsquo;s GitHub page if you want to learn more. For now, however, here is a screenshot of &lt;code&gt;htop&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/t4RN7qG2/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;disk-and-storage-management-in-the-terminal&#34;&gt;Disk and storage management in the Terminal&lt;/h2&gt;
&lt;p&gt;To Display all of the disks on your system and all of the storage that has been used on them, use the &lt;code&gt;df&lt;/code&gt; command with the &lt;code&gt;-h&lt;/code&gt; flag to make it human readable:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/sXWpb15D/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;If instead, you wanted to view all of the disks and their respective UUID&amp;rsquo;s or other information, use the &lt;code&gt;lsblk&lt;/code&gt; command with the &lt;code&gt;-f&lt;/code&gt; flag, which allows displaying the UUID of each disk along with some other information.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/L5Bj67yc/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can use the &lt;code&gt;mount&lt;/code&gt; command to mount a disk and access the files inside it. This is useful in recovery situations or when trying to save a computer from a live environment. For example, &lt;code&gt;sudo mount /dev/sda3&lt;/code&gt; will mount the drive &lt;code&gt;sda3&lt;/code&gt; for viewing/editing.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;du&lt;/code&gt; can be used to display all directories in a location and the amount of space they use up. This command gets pretty detailed so I suggest that you look more into it yourself to learn.&lt;/p&gt;
&lt;h2 id=&#34;networking-on-the-command-line&#34;&gt;Networking on The Command Line&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;This section assumes beforehand that you use networkmanager as your internet daemon&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If unsure whether you are connected to the Internet, or if you just want to check whether a website will accept packet requests from you, you can use the &lt;code&gt;ping&lt;/code&gt; command on it&amp;rsquo;s domain and monitor network transfers:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#this will send continuous requests to google.com&lt;/span&gt;
ping google.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can use the &lt;code&gt;ping&lt;/code&gt; command on any domain, local or public&lt;/p&gt;
&lt;p&gt;If you wanted to connect to an Internet connection from the command line, the easiest way would be to use &lt;code&gt;nmtui&lt;/code&gt;, a simple and easy to use interface for &lt;code&gt;networkmanager&lt;/code&gt;, here is an example of me using &lt;code&gt;nmtui&lt;/code&gt; to disconnect then reconnect to my home&amp;rsquo;s Internet connection:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/nr2Km8ht/out.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;To view your I.P. Address and other basic network information, run the &lt;code&gt;ip addr&lt;/code&gt; command. If you need more detailed information about your current connection, use &lt;code&gt;nmcli&lt;/code&gt;. And if you want a live environment to view the sending and receiving your computer is doing, try installing and running &lt;code&gt;bmon&lt;/code&gt;, it looks something like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/0yyvD7cg/out.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt;
</description>
     </item>
   
     <item>
       <title>My Top 10 Best Looking Cars</title>
       <link>https://co1ncidence.github.io/posts/top-10-best-looking-cars/</link>
       <pubDate>Wed, 05 Aug 2020 15:58:49 -0500</pubDate>
       
       <guid>https://co1ncidence.github.io/posts/top-10-best-looking-cars/</guid>
       <description>&lt;h2 id=&#34;mercedes-amg-gt-r&#34;&gt;Mercedes AMG GT-R&lt;/h2&gt;
&lt;p&gt;One of the only cars in recent times to really pose a threat to the sales of the 911, the GT does a good job of representing a similar muscular and round look while also adhering to the aesthetic of it&amp;rsquo;s predecessor, the SLS AMG.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/mwGVMaC.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;datsun-240z-fairlady&#34;&gt;Datsun 240z Fairlady&lt;/h2&gt;
&lt;p&gt;One of the most well-known sports cars of it&amp;rsquo;s time and now a JDM legend, the amount of things that have been done to the Datsun are insane, here is NightRide&amp;rsquo;s iteration of the vehicle, one of the best looking ones I&amp;rsquo;ve found:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/XXhE6B9.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;de-tomaso-pantera&#34;&gt;De Tomaso Pantera&lt;/h2&gt;
&lt;p&gt;While some may find the more exotic &amp;ldquo;GTS&amp;rdquo; variant of the Pantera to be the one that looks better, I&amp;rsquo;m not personally a fan of the Lamborghini Countach-like aesthetic of that vehicle. I much prefer the cleaner, sharper look of the Pantera, it is definitely a piece of art to behold.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/e9Vxb5e.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;bmw-m3&#34;&gt;BMW M3&lt;/h2&gt;
&lt;p&gt;Couldn&amp;rsquo;t have a list like this without the legend itself.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/BsUufV0.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;koenigsegg-one1&#34;&gt;Koenigsegg One:1&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve always had a thing for more muscular looking cars, but the style that real muscle cars have doesn&amp;rsquo;t really hit the spot I want it to. The way Koenigsegg designed the One:1, however, matches perfectly with what I mean. Long, sleek lines with a short hood and flat buttresses really make this car stand out in the upper echelon of the hypercar scene. The fact that it is one of the fastest cars in the world also helps its case.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.koenigsegg.com/wp-content/uploads/2019/01/Julia_LaPalme_LagunaSeca_2015_MGL3058.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;porsche-911-carrera&#34;&gt;Porsche 911 Carrera&lt;/h2&gt;
&lt;p&gt;Now while people usually consider the design of the Porsche 911 to be quite bland and repetitive, I quite like the planted, wide feel the design of the new 992 Carrera brings to the table, and though it&amp;rsquo;s basically the same as the last generation, the new headlights are the reason I chose this one over the 991.2.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/1MvCnm4.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;mclaren-765lt&#34;&gt;Mclaren 765LT&lt;/h2&gt;
&lt;p&gt;I was originally going to add the Mclaren 720s to take this place. But with the recent announcement that Mclaren&amp;rsquo;s next speedtail was going to be based off of the 720, I just had to use this one instead as it only improves on the beautiful design of its predecessor.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/F2c5TVc.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;acura-nsx&#34;&gt;Acura Nsx&lt;/h2&gt;
&lt;p&gt;I don&amp;rsquo;t really have much to say about this car, just that it looks nice for it&amp;rsquo;s time and has managed to employ a quite timeless aesthetic. Too bad it&amp;rsquo;s successor didn&amp;rsquo;t achieve the same.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/HyupsoV.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ferrari-250swb&#34;&gt;Ferrari 250SWB&lt;/h2&gt;
&lt;p&gt;A spin-off model of what was arguably one of the best looking Ferraris of all time, the 250SWB improves greatly on the vintage aesthetic of the 250GTO and manages to look even more sophisticated than its older brother.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/3nE0VdI.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;aston-martin-dbs-superleggera&#34;&gt;Aston Martin DBS Superleggera&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s the best looking, no argument here.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/8zDcqjT.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
</description>
     </item>
   
     <item>
       <title>My Linux Rices</title>
       <link>https://co1ncidence.github.io/posts/my-openbox-rice/</link>
       <pubDate>Tue, 04 Aug 2020 00:19:18 -0500</pubDate>
       
       <guid>https://co1ncidence.github.io/posts/my-openbox-rice/</guid>
       <description>&lt;h2 id=&#34;current-rice&#34;&gt;Current rice&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/k56XgFzc/what3.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;gallery-of-older-rices&#34;&gt;Gallery of Older Rices&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/0yjX1Rs3/what.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/jqnvqncX/what.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/zDyS3g9H/what.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/sgRPQjw3/what.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.postimg.cc/PfmCyx5s/2020-08-21-19-29-18.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.redd.it/uhmfcesa1zh51.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/NNM1EHU.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743868817028939876/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743868991428100156/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743869025699889162/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743869067751981137/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743869123804528641/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743869197209174116/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743869263236038786/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743869347050553425/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743869761556840569/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743869845870739681/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743869978997948548/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743870073629966387/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743870198544597062/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743870351632498759/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743870537209741342/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743870663319879840/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743870977724776502/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743871057064230922/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743871129814564955/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743871216506372197/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743871305434267738/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743871396999856208/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/743868455547305985/743871580370763856/image.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
</description>
     </item>
   
 </channel>
</rss>
